// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
generator client {
  provider = "prisma-client-js"
}

model User {
  id              Int       @id @default(autoincrement())
  email           String    @db.VarChar(60) @unique
  nome            String    @db.VarChar(60)
  senha           String    @db.VarChar(20)
  perfil          String    @db.VarChar(20) @default("default")
  login           String    @db.VarChar(20) @unique
  token           String?   @db.VarChar(100)
  dtToken         DateTime? @db.Date
  codVerificacao  String?   @db.VarChar(4)
  dtVerificacao   DateTime? @db.DateTime()
  grupos    Grupo[]
  fontes    Fonte[]
  periodos Periodo[]
}

model Grupo {
  id                Int     @id @default(autoincrement())
  nome              String  @db.VarChar(60)
  descricao         String? @db.VarChar(100)
  tipo              String  @db.VarChar(5) @default("D")
  ativo             Boolean @default(true)
  subGrupos         SubGrupo[]
  grupo_orcamentos  Orcamento[]
  //Divisão por usuário
  user                      User?   @relation(fields: [userId], references: [id])
  userId                    Int //Chave estranageira para tabela usuario
  @@unique([nome, userId])  //Só aceita um nome grupo unico por usuário

}

model SubGrupo {
  id              Int      @id @default(autoincrement())
  nome            String   @db.VarChar(60)
  descricao       String?  @db.VarChar(100)
  ativo           Boolean  @default(true)
  grupo           Grupo?   @relation(fields: [grupoId], references: [id])
  grupoId         Int //Chave estrangeira para tabela Grupo
  SG_lancamentos  Lancamento[]
  @@unique([nome, grupoId]) //Só aceita um nome de subgrupo unico para o mesmo grupo
}

model Fonte {
  id                 Int     @id @default(autoincrement())
  nome               String  @db.VarChar(60)
  descricao          String? @db.VarChar(100)
  tipo               String  @db.VarChar(5) @default("M") // M-Movimento, A-APlicação e C-Crédito
  ativo              Boolean @default(true)
  fonte_lancamentos  Lancamento[]
  fonte_lancamentosD Lancamento[] @relation("FonteD")
  fonte_saldos       Saldo[]
  //Divisão por usuário
  user                      User?   @relation(fields: [userId], references: [id])
  userId                    Int //Chave estrnageira para tabela usuario
  @@unique([nome, userId])  //Só aceita um nome fonte unico por usuário
}

model Periodo {
  id                  Int       @id @default(autoincrement())
  periodo             String    @db.VarChar(20)
  dtAtualizacao       DateTime  @db.Date
  status              String    @db.VarChar(5) @default("A") 
  periodo_saldos      Saldo[]
  periodo_orcamentos  Orcamento[]
  periodo_lancamentos Lancamento[]
  //Divisão por usuário
  user                      User?   @relation(fields: [userId], references: [id])
  userId                    Int //Chave estrnageira para tabela usuario
  @@unique([periodo, userId])  //Só aceita um nome grupo unico por usuário
}

model Saldo {
  id        Int      @id @default(autoincrement())
  valor     Float    @db.Double @default(0.00)
  fonte     Fonte?   @relation(fields: [fonteId], references: [id])
  fonteId   Int //Chave estrangeira para tabela Fonte
  periodo   Periodo?   @relation(fields: [periodoId], references: [id])
  periodoId Int //Chave estrangeira para tabela Periodo
  @@unique([periodoId, fonteId]) //Só acaita um Saldo de uma fonte por periodo
}

model Lancamento {
  id            Int       @id @default(autoincrement())
  valor         Float     @db.Double @default(0.00)
  dtLancamento  DateTime  @db.Date
  descricao     String?   @db.VarChar(100)  @default("")
  operacao      String    @db.VarChar(5) @default("D")
  periodoId     Int //Chave estrangeira para tabela Periodo
  subGrupoId    Int //Chave estrangeira para tabela SubGrupo
  fonteId       Int //Chave estrangeira para tabela Fonte
  fonteIdD      Int?      @default(0) //um id da fonte que recebera os recursos
  periodo       Periodo?  @relation(fields: [periodoId], references: [id])
  subGrupo      SubGrupo? @relation(fields: [subGrupoId], references: [id])
  fonte         Fonte?    @relation(fields: [fonteId], references: [id])
  fonteD        Fonte?    @relation("FonteD", fields: [fonteIdD], references: [id])
}

model Orcamento {
  id        Int      @id @default(autoincrement())
  valor     Float    @db.Double @default(0.00)
  grupo     Grupo?   @relation(fields: [grupoId], references: [id])
  grupoId   Int //Chave estrangeira para tabela Fonte
  periodo   Periodo?   @relation(fields: [periodoId], references: [id])
  periodoId Int //Chave estrangeira para tabela Periodo
  @@unique([periodoId, grupoId]) //Só acaita um Orcamento de um grupo por periodo
}
